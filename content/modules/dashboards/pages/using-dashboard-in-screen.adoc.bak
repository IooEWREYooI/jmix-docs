= Using Dashboard in Screen

To display a dashboard in a screen, use the `dashboard` UI component. To enable using the component in the screen, declare the `dashboard` namespace in the root element in the screen XML descriptor:

[source, xml,indent=0]
----
include::example$/ex1/src/main/resources/dashboards/ex1/screen/main/main-screen.xml[tags=namespace]
----

An example below shows adding a dashboard into the main screen:

[source, xml,indent=0]
----
include::example$/ex1/src/main/resources/dashboards/ex1/screen/main/main-screen.xml[tags=namespace;layout1;dashboard;layout2]
----

The `dashboard` tag contains the following attributes:

* `code` - a unique identifier of a dashboard.
* `jsonPath` - a `classPath` to the dashboard JSON file.
* `timerDelay` - a time period in seconds to refresh a dashboard UI.
* `assistantBeanName` - a reference to a Spring bean class that should be used for xref:dashboards:adding-business-logic.adoc[adding business logic] to the dashboard.

NOTE: When embedding a dashboard, you should specify the `code` or `jsonPath` attribute. When they are specified both, the `code` attribute takes precedence over `jsonPath`.

[[dashboard-parameter]]
You can pass parameters to a dashboard using the `dashboard:parameter` tag:

[source, xml,indent=0]
----
include::example$/ex1/src/main/resources/dashboards/ex1/screen/main/main-screen-example.xml[tags=dashboard]
----

The `parameter` tag has the following required attributes:

* `name` - a name of the parameter.
* `value` - a value of the parameter.
* `type` - a type of the value.

Also, you can create dashboard parameters in the xref:dashboards:user-interface.adoc#dashboard-parameters[Dashboard editor] screen.
